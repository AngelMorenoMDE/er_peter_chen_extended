/**
 */
package er_peter_chen_extended.provider;

import er_peter_chen_extended.util.Er_peter_chen_extendedAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Er_peter_chen_extendedItemProviderAdapterFactory extends Er_peter_chen_extendedAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Er_peter_chen_extendedItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCDiagramItemProvider erpcDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCDiagramAdapter() {
		if (erpcDiagramItemProvider == null) {
			erpcDiagramItemProvider = new ERPCDiagramItemProvider(this);
		}

		return erpcDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCEntityRelationshipLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCEntityRelationshipLinkItemProvider erpcEntityRelationshipLinkItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCEntityRelationshipLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCEntityRelationshipLinkAdapter() {
		if (erpcEntityRelationshipLinkItemProvider == null) {
			erpcEntityRelationshipLinkItemProvider = new ERPCEntityRelationshipLinkItemProvider(this);
		}

		return erpcEntityRelationshipLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCEntityAttributeLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCEntityAttributeLinkItemProvider erpcEntityAttributeLinkItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCEntityAttributeLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCEntityAttributeLinkAdapter() {
		if (erpcEntityAttributeLinkItemProvider == null) {
			erpcEntityAttributeLinkItemProvider = new ERPCEntityAttributeLinkItemProvider(this);
		}

		return erpcEntityAttributeLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCRelationshipAttributeLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCRelationshipAttributeLinkItemProvider erpcRelationshipAttributeLinkItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCRelationshipAttributeLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCRelationshipAttributeLinkAdapter() {
		if (erpcRelationshipAttributeLinkItemProvider == null) {
			erpcRelationshipAttributeLinkItemProvider = new ERPCRelationshipAttributeLinkItemProvider(this);
		}

		return erpcRelationshipAttributeLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCRegularRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCRegularRelationshipItemProvider erpcRegularRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCRegularRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCRegularRelationshipAdapter() {
		if (erpcRegularRelationshipItemProvider == null) {
			erpcRegularRelationshipItemProvider = new ERPCRegularRelationshipItemProvider(this);
		}

		return erpcRegularRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCIdentifyingRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCIdentifyingRelationshipItemProvider erpcIdentifyingRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCIdentifyingRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCIdentifyingRelationshipAdapter() {
		if (erpcIdentifyingRelationshipItemProvider == null) {
			erpcIdentifyingRelationshipItemProvider = new ERPCIdentifyingRelationshipItemProvider(this);
		}

		return erpcIdentifyingRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCRegularAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCRegularAttributeItemProvider erpcRegularAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCRegularAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCRegularAttributeAdapter() {
		if (erpcRegularAttributeItemProvider == null) {
			erpcRegularAttributeItemProvider = new ERPCRegularAttributeItemProvider(this);
		}

		return erpcRegularAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCCompositeAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCCompositeAttributeItemProvider erpcCompositeAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCCompositeAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCCompositeAttributeAdapter() {
		if (erpcCompositeAttributeItemProvider == null) {
			erpcCompositeAttributeItemProvider = new ERPCCompositeAttributeItemProvider(this);
		}

		return erpcCompositeAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCPrimaryKeyAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCPrimaryKeyAttributeItemProvider erpcPrimaryKeyAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCPrimaryKeyAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCPrimaryKeyAttributeAdapter() {
		if (erpcPrimaryKeyAttributeItemProvider == null) {
			erpcPrimaryKeyAttributeItemProvider = new ERPCPrimaryKeyAttributeItemProvider(this);
		}

		return erpcPrimaryKeyAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCWeakKeyAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCWeakKeyAttributeItemProvider erpcWeakKeyAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCWeakKeyAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCWeakKeyAttributeAdapter() {
		if (erpcWeakKeyAttributeItemProvider == null) {
			erpcWeakKeyAttributeItemProvider = new ERPCWeakKeyAttributeItemProvider(this);
		}

		return erpcWeakKeyAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCDerivedAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCDerivedAttributeItemProvider erpcDerivedAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCDerivedAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCDerivedAttributeAdapter() {
		if (erpcDerivedAttributeItemProvider == null) {
			erpcDerivedAttributeItemProvider = new ERPCDerivedAttributeItemProvider(this);
		}

		return erpcDerivedAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCMultiValuedAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCMultiValuedAttributeItemProvider erpcMultiValuedAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCMultiValuedAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCMultiValuedAttributeAdapter() {
		if (erpcMultiValuedAttributeItemProvider == null) {
			erpcMultiValuedAttributeItemProvider = new ERPCMultiValuedAttributeItemProvider(this);
		}

		return erpcMultiValuedAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCRegularEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCRegularEntityItemProvider erpcRegularEntityItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCRegularEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCRegularEntityAdapter() {
		if (erpcRegularEntityItemProvider == null) {
			erpcRegularEntityItemProvider = new ERPCRegularEntityItemProvider(this);
		}

		return erpcRegularEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link er_peter_chen_extended.ERPCWeakEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ERPCWeakEntityItemProvider erpcWeakEntityItemProvider;

	/**
	 * This creates an adapter for a {@link er_peter_chen_extended.ERPCWeakEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createERPCWeakEntityAdapter() {
		if (erpcWeakEntityItemProvider == null) {
			erpcWeakEntityItemProvider = new ERPCWeakEntityItemProvider(this);
		}

		return erpcWeakEntityItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (erpcDiagramItemProvider != null) erpcDiagramItemProvider.dispose();
		if (erpcEntityRelationshipLinkItemProvider != null) erpcEntityRelationshipLinkItemProvider.dispose();
		if (erpcEntityAttributeLinkItemProvider != null) erpcEntityAttributeLinkItemProvider.dispose();
		if (erpcRelationshipAttributeLinkItemProvider != null) erpcRelationshipAttributeLinkItemProvider.dispose();
		if (erpcRegularRelationshipItemProvider != null) erpcRegularRelationshipItemProvider.dispose();
		if (erpcIdentifyingRelationshipItemProvider != null) erpcIdentifyingRelationshipItemProvider.dispose();
		if (erpcRegularAttributeItemProvider != null) erpcRegularAttributeItemProvider.dispose();
		if (erpcCompositeAttributeItemProvider != null) erpcCompositeAttributeItemProvider.dispose();
		if (erpcPrimaryKeyAttributeItemProvider != null) erpcPrimaryKeyAttributeItemProvider.dispose();
		if (erpcWeakKeyAttributeItemProvider != null) erpcWeakKeyAttributeItemProvider.dispose();
		if (erpcDerivedAttributeItemProvider != null) erpcDerivedAttributeItemProvider.dispose();
		if (erpcMultiValuedAttributeItemProvider != null) erpcMultiValuedAttributeItemProvider.dispose();
		if (erpcRegularEntityItemProvider != null) erpcRegularEntityItemProvider.dispose();
		if (erpcWeakEntityItemProvider != null) erpcWeakEntityItemProvider.dispose();
	}

}
